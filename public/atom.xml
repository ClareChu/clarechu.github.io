<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-13T16:25:54.625Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>route</title>
    <link href="http://example.com/2021/03/14/route/"/>
    <id>http://example.com/2021/03/14/route/</id>
    <published>2021-03-13T16:25:54.000Z</published>
    <updated>2021-03-13T16:25:54.625Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux 虚拟网络设备详解之 Bridge 网桥</title>
    <link href="http://example.com/2021/03/13/linux/bridge/"/>
    <id>http://example.com/2021/03/13/linux/bridge/</id>
    <published>2021-03-13T14:44:26.000Z</published>
    <updated>2021-03-13T15:28:41.708Z</updated>
    
    <content type="html"><![CDATA[<p>同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。</p><p>除此之外，Bridge 还是一个交换机，具有交换机所有的功能。</p><p>对于普通的网络设备，就像一个管道，只有两端，数据从一端进，从另一端出。而 Bridge 有多个端口，数据可以从多个端口进，从多个端口出。</p><p>Bridge 的这个特性让它可以接入其他的网络设备.</p><p>使用 来操作linux Bridge</p><h3 id="安装-brctl"><a href="#安装-brctl" class="headerlink" title="安装 brctl"></a>安装 <code>brctl</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install bridge-utils -y</span><br></pre></td></tr></table></figure><p>我们模拟一个docker0 类似的网桥</p><ol><li>添加网桥(br0)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ brctl addbr br0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法一:</span></span><br><span class="line">$ sudo ifconfig br0 192.168.100.1 netmask  255.255.255.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二:</span></span><br><span class="line"></span><br><span class="line">$ sudo ip addr add 192.168.100.0/16 dev bridge0</span><br><span class="line"></span><br><span class="line">$ sudo ip link <span class="built_in">set</span> dev bridge0 up</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>2.查看网桥</p><p>1）显示所有的网桥信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo brctl show</span><br></pre></td></tr></table></figure><p>2）显示某个网桥(br0)的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo brctl show br0</span><br></pre></td></tr></table></figure><p>3.删除网桥(br0)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo brctl delbr br0</span><br></pre></td></tr></table></figure><ol start="4"><li>将eth0端口加入网桥br0</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brctl addif br0 eth0</span><br></pre></td></tr></table></figure><ol start="5"><li>从网桥br0中删除eth0端口</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brctl delif br0 eth0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;同 tap/tun、veth-pair 一样，Bridge 也是一种虚拟网络设备，所以具备虚拟网络设备的所有特性，比如可以配置 IP、MAC 等。&lt;/p&gt;
&lt;p&gt;除此之外，Bridge 还是一个交换机，具有交换机所有的功能。&lt;/p&gt;
&lt;p&gt;对于普通的网络设备，就像一个管道，</summary>
      
    
    
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
    <category term="network" scheme="http://example.com/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>如何快速安装zsh</title>
    <link href="http://example.com/2021/03/12/zsh/"/>
    <id>http://example.com/2021/03/12/zsh/</id>
    <published>2021-03-12T06:16:56.000Z</published>
    <updated>2021-03-12T06:18:54.283Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-安装并配置zsh"><a href="#Linux-安装并配置zsh" class="headerlink" title="Linux 安装并配置zsh"></a>Linux 安装并配置zsh</h2><p>1.1 安装zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install -y zsh</span><br></pre></td></tr></table></figure><p>1.2 安装oh-my-zsh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>1.3 安装powerline font字体库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ sudo apt-get install fonts-powerline</span><br></pre></td></tr></table></figure><p>1.4 打开zsh配置文件 ~/.zshrc，修改主题为agnoster</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 <span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line">2 <span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line">3 <span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line">4 <span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line">5 ZSH_THEME=<span class="string">&quot;agnoster&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Linux-安装并配置zsh&quot;&gt;&lt;a href=&quot;#Linux-安装并配置zsh&quot; class=&quot;headerlink&quot; title=&quot;Linux 安装并配置zsh&quot;&gt;&lt;/a&gt;Linux 安装并配置zsh&lt;/h2&gt;&lt;p&gt;1.1 安装zsh&lt;/p&gt;
&lt;figure </summary>
      
    
    
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>如何快速安装k8s集群</title>
    <link href="http://example.com/2021/03/12/k8s/ik/"/>
    <id>http://example.com/2021/03/12/k8s/ik/</id>
    <published>2021-03-12T05:13:13.000Z</published>
    <updated>2021-03-12T06:15:50.825Z</updated>
    
    <content type="html"><![CDATA[<p>有时候需要快速搭建一个k8s教程来帮助 省去很多时间 把更多的时间都放到写代码的时候，我觉得这也是很有必要的。</p><p>首先准备若干个机器，这里我只是举例子 </p><p>我现在准备了 三台机器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">10.10.13.113 master</span><br><span class="line"></span><br><span class="line">10.10.13.114 node01</span><br><span class="line"></span><br><span class="line">10.10.13.115 node02</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>在ansible控制端配置免密码登录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 或者传统 RSA 算法</span></span><br><span class="line">$ ssh-keygen -t rsa -b 2048 -N <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">$ ssh-copy-id root@<span class="variable">$IPs</span> <span class="comment">#$IPs为所有节点地址包括自身，按照提示输入yes 和root密码</span></span><br><span class="line"></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">&quot;/Users/clare/.ssh/id_rsa.pub&quot;</span></span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to <span class="built_in">log</span> <span class="keyword">in</span> with the new key(s), to filter out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- <span class="keyword">if</span> you are prompted now it is to install the new keys</span><br><span class="line">root@xxx.xxx.xxx.xxx<span class="string">&#x27;s password:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Number of key(s) added:        1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Now try logging into the machine, with:   &quot;ssh &#x27;</span>root@xxx.xxx.xxx.xxx<span class="string">&#x27;&quot;</span></span><br><span class="line"><span class="string">and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试是否可以免密登陆</span></span><br><span class="line"></span><br><span class="line">$ ssh root@<span class="variable">$IPs</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.1 安装ansible (也可以使用容器化运行kubeasz，已经预装好ansible)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 注意pip 21.0以后不再支持python2和python3.5，需要如下安装</span></span><br><span class="line"><span class="comment"># To install pip for Python 2.7 install it from https://bootstrap.pypa.io/2.7/ :</span></span><br><span class="line">curl -O https://bootstrap.pypa.io/2.7/get-pip.py</span><br><span class="line">python get-pip.py</span><br><span class="line">python -m pip install --upgrade <span class="string">&quot;pip &lt; 21.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pip安装ansible(国内如果安装太慢可以直接用pip阿里云加速)</span></span><br><span class="line">pip install ansible -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h3 id="下载工具脚本ezdown"><a href="#下载工具脚本ezdown" class="headerlink" title="下载工具脚本ezdown"></a>下载工具脚本<code>ezdown</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载工具脚本ezdown，举例使用kubeasz版本3.0.0</span></span><br><span class="line">$ <span class="built_in">export</span> release=3.0.0</span><br><span class="line"></span><br><span class="line">$ curl -C- -fLO --retry 3 https://github.com/easzlab/kubeasz/releases/download/<span class="variable">$&#123;release&#125;</span>/ezdown</span><br><span class="line"></span><br><span class="line">$ chmod +x ./ezdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用工具脚本下载</span></span><br><span class="line">$ chmod +x ezdown</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line"><span class="comment"># k 指定kubernetes的版本</span></span><br><span class="line">$ ./ezdown -D -k v1.18.3</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.2 创建集群配置实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ezctl new k8s-01</span><br><span class="line">2021-01-19 10:48:23 DEBUG generate custom cluster files <span class="keyword">in</span> /etc/kubeasz/clusters/k8s-01</span><br><span class="line">2021-01-19 10:48:23 DEBUG <span class="built_in">set</span> version of common plugins</span><br><span class="line">2021-01-19 10:48:23 DEBUG cluster k8s-01: files successfully created.</span><br><span class="line">2021-01-19 10:48:23 INFO next steps 1: to config <span class="string">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span></span><br><span class="line">2021-01-19 10:48:23 INFO next steps 2: to config <span class="string">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span></span><br><span class="line">然后根据提示配置<span class="string">&#x27;/etc/kubeasz/clusters/k8s-01/hosts&#x27;</span> 和 <span class="string">&#x27;/etc/kubeasz/clusters/k8s-01/config.yml&#x27;</span>：根据前面节点规划修改hosts 文件和其他集群层面的主要配置选项；其他集群组件等配置项可以在config.yml 文件中修改。</span><br></pre></td></tr></table></figure><p>4.3 开始安装 如果你对集群安装流程不熟悉，请阅读项目首页 安装步骤 讲解后分步安装，并对 每步都进行验证</p><h3 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ ezctl setup k8s-01 all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者分步安装，具体使用 ezctl help setup 查看分步安装帮助信息</span></span><br><span class="line"><span class="comment"># ezctl setup k8s-01 01</span></span><br><span class="line"><span class="comment"># ezctl setup k8s-01 02</span></span><br><span class="line"><span class="comment"># ezctl setup k8s-01 03</span></span><br><span class="line"><span class="comment"># ezctl setup k8s-01 04</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有时候需要快速搭建一个k8s教程来帮助 省去很多时间 把更多的时间都放到写代码的时候，我觉得这也是很有必要的。&lt;/p&gt;
&lt;p&gt;首先准备若干个机器，这里我只是举例子 &lt;/p&gt;
&lt;p&gt;我现在准备了 三台机器&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;</summary>
      
    
    
    
    
    <category term="kubernetes" scheme="http://example.com/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>cgroups Linux控制组</title>
    <link href="http://example.com/2021/03/10/linux/cgroups/"/>
    <id>http://example.com/2021/03/10/linux/cgroups/</id>
    <published>2021-03-10T10:06:35.000Z</published>
    <updated>2021-03-11T08:33:36.010Z</updated>
    
    <content type="html"><![CDATA[<p>实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。<br>错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。<br>幸运的是,有一种方法可以检查那些相同的应用程序。<br>控制组（cgroups）是一项内核功能,可以限制,说明和隔离一个或多个进程的CPU,内存,磁盘I / O和网络使用情况。</p><p>cgroups框架提供以下内容：</p><p>资源限制： 可以将组配置为不超过指定的内存限制或使用的处理器数量不超过期望的数量,或者限制为特定的外围设备。<br>优先级： 可以将一个或多个组配置为利用更少或更多的CPU或磁盘 I/O 吞吐量。<br>监控： 监视和衡量组的资源使用情况。<br>控制： 可以冻结或停止并重新启动一组进程。</p><p>一个<code>cgroup</code>可以包含一个或多个绑定到同一组限制的进程。这些组也可以是分层的,这意味着子组继承了对其父组管理的限制。</p><p>Linux内核提供对cgroup技术的一系列控制器或子系统的访问。控制器负责将特定类型的系统资源分配给一组一个或多个进程。<br>例如,memory控制器是在cpuacct监视CPU使用率时限制内存使用率的。</p><p>您可以直接和间接（使用LXC,libvirt或Docker）访问和管理cgroup,在此我将首先通过sysfs和libcgroups库来介绍和管理cgroup 。<br>要遵循此处的示例,您首先需要安装必要的软件包。在Red Hat Enterprise Linux或CentOS上,在命令行上键入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">blkio：设置限制每个块设备的输入输出控制。例如:磁盘，光盘以及usb等等。</span><br><span class="line">cpu：使用调度程序为cgroup任务提供cpu的访问。</span><br><span class="line">cpuacct：产生cgroup任务的cpu资源报告。</span><br><span class="line">cpuset：如果是多核心的cpu，这个子系统会为cgroup任务分配单独的cpu和内存。</span><br><span class="line">devices：允许或拒绝cgroup任务对设备的访问。</span><br><span class="line">freezer：暂停和恢复cgroup任务。</span><br><span class="line">memory：设置每个cgroup的内存限制以及产生内存资源报告。</span><br><span class="line">net_cls：标记每个网络包以供cgroup方便使用。</span><br><span class="line">ns：命名空间子系统。</span><br><span class="line">perf_event：增加了对每group的监测跟踪的能力，即可以监测属于某个特定的group的所有线程以及运行在特定CPU上的线程。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="cgroups-对内存的限制"><a href="#cgroups-对内存的限制" class="headerlink" title="cgroups 对内存的限制"></a>cgroups 对内存的限制</h2><h3 id="手动方式"><a href="#手动方式" class="headerlink" title="手动方式"></a>手动方式</h3><p>安装了正确的软件包后，您可以直接通过sysfs层次结构配置cgroup。例如，要foo在memory子系统下创建一个名为cgroup 的目录，请在/ sys / fs / cgroup / memory中创建一个名为foo的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir /sys/fs/cgroup/memory/foo</span><br></pre></td></tr></table></figure><p>默认情况下，每个新创建的cgroup都将继承对系统整个内存池的访问权限。对于某些应用程序，主要是那些继续分配更多内存但拒绝释放已经分配的内存的应用程序，可能不是一个好主意。要将应用程序限制在合理的范围内，您需要更新 memory.limit_in_bytes文件。</p><p>将在cgroup下运行的任何内容的内存限制foo为50MB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 50000000 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure><p>验证设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cat memory.limit_in_bytes</span><br><span class="line">50003968</span><br></pre></td></tr></table></figure><p>请注意，回读的值始终是内核页面大小的倍数（即4096字节或4KB）。该值是最小的可分配内存大小。</p><p>启动应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh ~/test.sh &amp;</span><br></pre></td></tr></table></figure><p>使用其进程ID（PID），将应用程序移动到控制器foo下的 cgroup memory：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 2845 &gt; /sys/fs/cgroup/memory/foo/cgroup.procs</span><br></pre></td></tr></table></figure><p>使用相同的PID编号，列出正在运行的进程并验证其是否在所需的cgroup中运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ps -o cgroup 2845</span><br><span class="line">CGROUP</span><br><span class="line">8:memory:/foo,1:name=systemd:/user.slice/user-0.slice/session-4.scope</span><br></pre></td></tr></table></figure><p>您还可以通过读取所需的文件来监视该cgroup当前正在使用的内容。在这种情况下，您将需要查看由您的进程（和产生的子进程）分配的内存量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /sys/fs/cgroup/memory/foo/memory.usage_in_bytes</span><br><span class="line">253952</span><br></pre></td></tr></table></figure><h3 id="当我改变limit"><a href="#当我改变limit" class="headerlink" title="当我改变limit"></a>当我改变limit</h3><p>现在，让我们重新创建相同的场景，但不要将cgroup限制 foo为50MB内存，而是将其限制为500个字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 500 | sudo tee /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure><p>注意：如果一项任务超出其定义的限制，内核将进行干预，在某些情况下，将终止该任务。</p><p>同样，当您读回该值时，该值将始终是内核页面大小的倍数。因此，尽管将其设置为500字节，但实际上设置为4 KB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat /sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br><span class="line">4096</span><br></pre></td></tr></table></figure><p>启动应用程序，将其移至cgroup并监视系统日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ sudo tail -f /var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line">Oct 14 10:22:40 localhost kernel: sh invoked oom-killer:</span><br><span class="line">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: sh cpuset=/ mems_allowed=0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: CPU: 0 PID: 2687 Comm:</span><br><span class="line">↪sh Tainted: G</span><br><span class="line">OE  ------------   3.10.0-327.36.3.el7.x86_64 <span class="comment">#1</span></span><br><span class="line">Oct 14 10:22:40 localhost kernel: Hardware name: innotek GmbH</span><br><span class="line">VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006</span><br><span class="line">Oct 14 10:22:40 localhost kernel: ffff880036ea5c00</span><br><span class="line">↪0000000093314010 ffff88000002bcd0 ffffffff81636431</span><br><span class="line">Oct 14 10:22:40 localhost kernel: ffff88000002bd60</span><br><span class="line">↪ffffffff816313cc 01018800000000d0 ffff88000002bd68</span><br><span class="line">Oct 14 10:22:40 localhost kernel: ffffffffbc35e040</span><br><span class="line">↪fffeefff00000000 0000000000000001 ffff880036ea6103</span><br><span class="line">Oct 14 10:22:40 localhost kernel: Call Trace:</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81636431&gt;]</span><br><span class="line">↪dump_stack+0x19/0x1b</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816313cc&gt;]</span><br><span class="line">↪dump_header+0x8e/0x214</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116d21e&gt;]</span><br><span class="line">↪oom_kill_process+0x24e/0x3b0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81088e4e&gt;] ?</span><br><span class="line">↪has_capability_noaudit+0x1e/0x30</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d4285&gt;]</span><br><span class="line">↪mem_cgroup_oom_synchronize+0x575/0x5a0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff811d3650&gt;] ?</span><br><span class="line">↪mem_cgroup_charge_common+0xc0/0xc0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8116da94&gt;]</span><br><span class="line">↪pagefault_out_of_memory+0x14/0x90</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8162f815&gt;]</span><br><span class="line">↪mm_fault_error+0x68/0x12b</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff816422d2&gt;]</span><br><span class="line">↪__do_page_fault+0x3e2/0x450</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff81642363&gt;]</span><br><span class="line">↪do_page_fault+0x23/0x80</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [&lt;ffffffff8163e648&gt;]</span><br><span class="line">↪page_fault+0x28/0x30</span><br><span class="line">Oct 14 10:22:40 localhost kernel: Task <span class="keyword">in</span> /foo killed as</span><br><span class="line">↪a result of <span class="built_in">limit</span> of /foo</span><br><span class="line">Oct 14 10:22:40 localhost kernel: memory: usage 4kB, <span class="built_in">limit</span></span><br><span class="line">↪4kB, failcnt 8</span><br><span class="line">Oct 14 10:22:40 localhost kernel: memory+swap: usage 4kB,</span><br><span class="line">↪<span class="built_in">limit</span> 9007199254740991kB, failcnt 0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: kmem: usage 0kB, <span class="built_in">limit</span></span><br><span class="line">↪9007199254740991kB, failcnt 0</span><br><span class="line">Oct 14 10:22:40 localhost kernel: Memory cgroup stats <span class="keyword">for</span> /foo:</span><br><span class="line">↪cache:0KB rss:4KB rss_huge:0KB mapped_file:0KB swap:0KB</span><br><span class="line">↪inactive_anon:0KB active_anon:0KB inactive_file:0KB</span><br><span class="line">↪active_file:0KB unevictable:0KB</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [ pid ]   uid  tgid total_vm</span><br><span class="line">↪rss nr_ptes swapents oom_score_adj name</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [ 2687]     0  2687    28281</span><br><span class="line">↪347     12        0             0 sh</span><br><span class="line">Oct 14 10:22:40 localhost kernel: [ 2702]     0  2702    28281</span><br><span class="line">↪50    7        0             0 sh</span><br><span class="line">Oct 14 10:22:40 localhost kernel: Memory cgroup out of memory:</span><br><span class="line">↪Kill process 2687 (sh) score 0 or sacrifice child</span><br><span class="line">Oct 14 10:22:40 localhost kernel: Killed process 2702 (sh)</span><br><span class="line">↪total-vm:113124kB, anon-rss:200kB, file-rss:0kB</span><br><span class="line">Oct 14 10:22:41 localhost kernel: sh invoked oom-killer:</span><br><span class="line">↪gfp_mask=0xd0, order=0, oom_score_adj=0</span><br><span class="line">[ ... ]</span><br></pre></td></tr></table></figure><p>请注意，一旦应用程序达到4KB的限制，内核的“内存不足杀手”（或oom-killer）就会介入。它终止了该应用程序，并且不再运行。您可以通过键入以下内容进行验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ps -o cgroup 2687</span><br><span class="line">CGROUP</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用libcgroup"><a href="#使用libcgroup" class="headerlink" title="使用libcgroup"></a>使用<code>libcgroup</code></h2><p>libcgroup软件包中 提供的管理实用程序简化了此处描述的许多早期步骤。例如，使用cgcreate二进制文件的单个命令调用将负责创建sysfs条目和文件的过程。</p><p>要创建在 子系统foo下命名的组memory，请键入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cgcreate -g memory:foo</span><br></pre></td></tr></table></figure><p>注意：libcgroup提供了一种用于管理控制组中的任务的机制。</p><p>使用与以前相同的方法，您可以开始设置阈值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 50000000 | sudo tee</span><br><span class="line">↪/sys/fs/cgroup/memory/foo/memory.limit_in_bytes</span><br></pre></td></tr></table></figure><p>验证新配置的设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cat memory.limit_in_bytes</span><br><span class="line">50003968</span><br></pre></td></tr></table></figure><p>foo使用 cgexec二进制文件 在cgroup中运行应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cgexec -g memory:foo ~/test.sh</span><br></pre></td></tr></table></figure><p>使用其PID编号，验证应用程序正在cgroup中并在已定义的子系统（memory）下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$  ps -o cgroup 2945</span><br><span class="line">CGROUP</span><br><span class="line">6:memory:/foo,1:name=systemd:/user.slice/user-0.slice/</span><br><span class="line">↪session-1.scope</span><br></pre></td></tr></table></figure><p>如果您的应用程序不再运行，并且您想要清理并删除cgroup，则可以使用cgdelete二进制文件来完成。要从控制器foo 下面删除组memory，请键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cgdelete memory:foo</span><br></pre></td></tr></table></figure><p>持久群体<br>您还可以通过一个简单的配置文件和启动服务来完成上述所有操作。您可以在/etc/cgconfig.conf文件中定义所有cgroup名称和属性。以下内容为该组添加了一些属性foo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ cat /etc/cgconfig.conf</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  Copyright IBM Corporation. 2007</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  Authors:     Balbir Singh &lt;balbir@linux.vnet.ibm.com&gt;</span></span><br><span class="line"><span class="comment">#  This program is free software; you can redistribute it</span></span><br><span class="line"><span class="comment">#  and/or modify it under the terms of version 2.1 of the GNU</span></span><br><span class="line"><span class="comment">#  Lesser General Public License as published by the Free</span></span><br><span class="line"><span class="comment">#  Software Foundation.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#  This program is distributed in the hope that it would be</span></span><br><span class="line"><span class="comment">#  useful, but WITHOUT ANY WARRANTY; without even the implied</span></span><br><span class="line"><span class="comment">#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR</span></span><br><span class="line"><span class="comment">#  PURPOSE.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># By default, we expect systemd mounts everything on boot,</span></span><br><span class="line"><span class="comment"># so there is not much to do.</span></span><br><span class="line"><span class="comment"># See man cgconfig.conf for further details, how to create</span></span><br><span class="line"><span class="comment"># groups on system boot using this file.</span></span><br><span class="line"></span><br><span class="line">group foo &#123;</span><br><span class="line">cpu &#123;</span><br><span class="line">cpu.shares = 100;</span><br><span class="line">&#125;</span><br><span class="line">memory &#123;</span><br><span class="line">memory.limit_in_bytes = 5000000;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这些cpu.shares选项定义组的CPU优先级。默认情况下，所有组都继承1,024个份额或100％的CPU时间。通过将此值降低到较为保守的程度（例如100），该组将被限制为大约CPU时间的10％。</p><p>如前所述，在cgroup中运行的进程也可以限制为它可以访问的CPU（核心）数量。将以下部分添加到相同的cgconfig.conf文件中，并在所需的组名称下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cpuset &#123;</span><br><span class="line">cpuset.cpus=<span class="string">&quot;0-5&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有了这个限制，此cgroup会将应用程序绑定到核心0到5-也就是说，它将仅看到系统上的前六个CPU核心。</p><p>接下来，您需要使用该cgconfig服务加载此配置。首先，启用cgconfig以在系统启动时加载以上配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl <span class="built_in">enable</span> cgconfig</span><br><span class="line">Create symlink from /etc/systemd/system/sysinit.target.wants/</span><br><span class="line">↪cgconfig.service</span><br><span class="line">to /usr/lib/systemd/system/cgconfig.service.</span><br></pre></td></tr></table></figure><p>现在，启动cgconfig服务并手动加载相同的配置文件（或者您可以跳过此步骤并重新引导系统）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start cgconfig</span><br></pre></td></tr></table></figure><p>将应用程序启动到cgroup中，foo并将其绑定到您的 memory和cpu 限制：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cgexec -g memory,cpu,cpuset:foo ~/test.sh &amp;</span><br></pre></td></tr></table></figure><p>除了将应用程序启动到预定义的cgroup中之外，其余所有内容将在系统重新引导后继续存在。但是，您可以通过定义依赖于cgconfig 服务的启动初始化脚本来启动该应用程序，从而自动执行该过程 。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实话实说,某些软件应用程序可能需要控制或限制-至少出于稳定性和某种程度上的安全性考虑。&lt;br&gt;错误或错误代码常常会破坏整个计算机,并可能破坏整个生态系统。&lt;br&gt;幸运的是,有一种方法可以检查那些相同的应用程序。&lt;br&gt;控制组（cgroups）是一项内核功能,可以限制,说明和</summary>
      
    
    
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
    <category term="kernal" scheme="http://example.com/tags/kernal/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命名空间概述</title>
    <link href="http://example.com/2021/03/10/linux/namespace/"/>
    <id>http://example.com/2021/03/10/linux/namespace/</id>
    <published>2021-03-10T09:12:47.000Z</published>
    <updated>2021-03-10T10:08:39.980Z</updated>
    
    
    
    
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
    <category term="kernal" scheme="http://example.com/tags/kernal/"/>
    
  </entry>
  
  <entry>
    <title>iptables 详解</title>
    <link href="http://example.com/2021/03/09/analysis/"/>
    <id>http://example.com/2021/03/09/analysis/</id>
    <published>2021-03-09T11:03:03.000Z</published>
    <updated>2021-03-09T13:51:26.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iptables-详解"><a href="#iptables-详解" class="headerlink" title="iptables 详解"></a>iptables 详解</h1><p>iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代理，用户通过iptables这个代理，将用户的安全设定执行到对应的”安全框架”中，这个”安全框架”才是真正的防火墙，这个框架的名字叫netfilter</p><p>netfilter才是防火墙真正的安全框架（framework），netfilter位于内核空间。</p><p>iptables其实是一个命令行工具，位于用户空间，我们用这个工具操作真正的框架。</p><p>iptables 的表（tables） 和链（chains）<br>描述完iptables术语后、相信大家对iptables的表和链有了初步的了解了、默认情况下。Iptables，根据功能和表的定义划分、最常用的有三个表，分别是filter,nat mangle.其中每个表又有各自包含不同的操作链（chains）</p><p><img src="analysis/iptables.png"></p><h4 id="处理动作"><a href="#处理动作" class="headerlink" title="处理动作"></a>处理动作</h4><p>处理动作在iptables中被称为target（这样说并不准确，我们暂且这样称呼），动作也可以分为基本动作和扩展动作。</p><p>此处列出一些常用的动作，之后的文章会对它们进行详细的示例与总结：</p><ul><li><p><code>ACCEPT</code>：允许数据包通过。</p></li><li><p><code>DROP</code>：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</p></li><li><p><code>REJECT</code>：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</p></li><li><p><code>SNAT</code>：源地址转换，解决内网用户用同一个公网地址上网的问题。</p></li><li><p><code>MASQUERADE</code>：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</p></li><li><p><code>DNAT</code>：目标地址转换。</p></li><li><p><code>REDIRECT</code>：在本机做端口映射。</p></li><li><p><code>LOG</code>：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</p></li></ul><h3 id="iptables具有以下4个内置表"><a href="#iptables具有以下4个内置表" class="headerlink" title="iptables具有以下4个内置表"></a>iptables具有以下4个内置表</h3><h4 id="1-Filter"><a href="#1-Filter" class="headerlink" title="1. Filter"></a>1. Filter</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Filter表</span><br><span class="line"></span><br><span class="line">和主机自身相关、负责防火墙（过滤本机流入、流出数据包）。</span><br><span class="line"></span><br><span class="line">是iptables默认使用的表、这个表定义了三个链（chains）说明如下</span><br><span class="line"></span><br><span class="line">INPUT  负责过滤所有目标地址是主机（防火墙）地址的数据包、通俗的讲、就是过滤进入主机的数据包。</span><br><span class="line"></span><br><span class="line">FORWARD  负责转发流经主机但不进入本机的数据包、起转发作用、和NAT表关系很大、后面会详细介绍</span><br><span class="line"></span><br><span class="line">OUTPUT  处理所有原地址是本机地址的数据包、通俗的讲就是处理从主机发出去的数据包。</span><br></pre></td></tr></table></figure><h4 id="2-NAT表"><a href="#2-NAT表" class="headerlink" title="2. NAT表"></a>2. NAT表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">NAT表</span><br><span class="line"></span><br><span class="line">是网络地址转换的意思。即负责来源与目的IP地址和port的转换、和主机本身无关。一般用于局域网多人共享上网或者内网IP映射外网IP及不同端口转换服务等功能。Nat表的功能很重要、这个表定义了三个链（chains）</span><br><span class="line"></span><br><span class="line">OUTPUT</span><br><span class="line"></span><br><span class="line">主机发出去的数据包有关、在数据包路由之前改变主机产生的数据包的目的地址等。</span><br><span class="line"></span><br><span class="line">PREROUTING</span><br><span class="line"></span><br><span class="line">在数据包刚到达防火墙时、进行路由判断之前执行的规则、改变包的目的地址（DNAT功能）、端口等（通俗比喻，就是收信时、根据规则重写收件人的地址、这看上去不地道啊、）把公司IP映射到局域网的机器上、此链多用于把外部IP地址端口的服务、映射为内部IP地址及端口</span><br><span class="line"></span><br><span class="line">POSTROUTING</span><br><span class="line"></span><br><span class="line">在数据包离开防火墙时进行路由判断之后执行的规则、改变包的源地址（SNAT）、端口等（通俗比喻、就是寄信时写好发件人的地址、要让人家回信是能够有地址可回）刺链多用于局域网共享上网，把所有局域网的地址、转换为公网地址上</span><br></pre></td></tr></table></figure><h4 id="3-Mangle"><a href="#3-Mangle" class="headerlink" title="3. Mangle"></a>3. Mangle</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Mangle</span><br><span class="line"></span><br><span class="line">主要负责修改数据包中特殊的路由标记，如TTL、TOS、MARK等、这个表定义了5个链（chains）</span><br><span class="line"></span><br><span class="line">INPUT</span><br><span class="line"></span><br><span class="line">同filter表的INPUT</span><br><span class="line"></span><br><span class="line">FORWARD</span><br><span class="line"></span><br><span class="line">同filter表的FORWARD</span><br><span class="line"></span><br><span class="line">OUTPUT  同fileter表的OUTPUT</span><br><span class="line"></span><br><span class="line">PREROUTING  同nat表的PREROUTING</span><br><span class="line"></span><br><span class="line">POSTOUTING  同nat表的POSTOUTING</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-Raw"><a href="#4-Raw" class="headerlink" title="4. Raw"></a>4. Raw</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>后面在说</p><h3 id="参数定义"><a href="#参数定义" class="headerlink" title="参数定义"></a>参数定义</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">-t：指定要操纵的表； `table`</span><br><span class="line"></span><br><span class="line">-A：向规则链中添加条目；`Append`</span><br><span class="line"></span><br><span class="line">-D：从规则链中删除条目； `delete`</span><br><span class="line"></span><br><span class="line">-I：向规则链中插入条目；`insert`</span><br><span class="line"></span><br><span class="line">-R：替换规则链中的条目；`replace`</span><br><span class="line"></span><br><span class="line">-L：显示规则链中已有的条目；``</span><br><span class="line"></span><br><span class="line">-F：清除规则链中已有的条目；`flush`</span><br><span class="line"></span><br><span class="line">-Z：清空规则链中的数据包计算器和字节计数器；</span><br><span class="line"></span><br><span class="line">-N：创建新的用户自定义规则链；</span><br><span class="line"></span><br><span class="line">-P：定义规则链中的默认目标；`policy`</span><br><span class="line"></span><br><span class="line">-h：显示帮助信息；`<span class="built_in">help</span>`</span><br><span class="line"></span><br><span class="line">-p：指定要匹配的数据包协议类型；`protoprotocol: by number or name, eg. tcp`</span><br><span class="line"></span><br><span class="line">-s：指定要匹配的数据包源ip地址；`<span class="built_in">source</span>`</span><br><span class="line"></span><br><span class="line">-d：指定要匹配的数据包目标ip地址；`destination`</span><br><span class="line"></span><br><span class="line">-j：指定要跳转的目标；`jump`</span><br><span class="line"></span><br><span class="line">-i：指定数据包进入本机的网络接口（网卡）；`input`</span><br><span class="line"></span><br><span class="line">-o：指定数据包离开本机的网络接口（网卡）；`onput`</span><br><span class="line"></span><br><span class="line">--sport：匹配来源端口号；`<span class="built_in">source</span> port`</span><br><span class="line"></span><br><span class="line">--dport：匹配目标端口号。`destination port`</span><br><span class="line"></span><br><span class="line">下述规则允许端口80上的传入HTTP通信。</span><br></pre></td></tr></table></figure><h4 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ iptables -A INPUT -i eth1 -p tcp --dport 80 -d 1.2.3.4 -j ACCEPT</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>-A 表示我们正在添加新规则。缺省情况下，除非您指定另一个表，否则iptables会将所有新规则添加到 Filter 表中。</p><p>-i 标志指定将规则应用到的设备。如果您未指定设备，则iptables会将规则应用于所有传入流量，而与设备无关。</p><p>-p 标志指定要处理的数据包协议，在本例中为TCP。</p><p>–dport 标志指定目标端口，该端口为80。</p><p>-d 指定目标IP地址，即1.2.3.4。如果未指定目标IP地址，则该规则将适用于eth1上的所有传入流量，而不管IP地址如何。</p><p>-j 指定要执行的操作或JUMP操作。在这里，我们使用接受策略来接受数据包。</p><p>开放端口指定插入第几行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --line-number 展示行号</span></span><br><span class="line">$ iptables -nL  --line-number</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在第四行插入iptables</span></span><br><span class="line">$ iptables -I INPUT 4 -p tcp --dport 1234 -j ACCEPT</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>禁止所有INPUT</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ iptables -P INPUT DROP</span><br><span class="line">$ iptables -P OUTPUT DROP</span><br></pre></td></tr></table></figure><p>我现在用一个测试软件来测试连通性</p><h3 id="四、nc搭建简单内网聊天室"><a href="#四、nc搭建简单内网聊天室" class="headerlink" title="四、nc搭建简单内网聊天室"></a>四、nc搭建简单内网聊天室</h3><p>本机-本机 ， 单台机器开了两个shell窗口，当一个窗口输入消息时，另一个窗口也会同步显示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ncat -v -lp 8080</span><br></pre></td></tr></table></figure><h4 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]$ ncat -v -lp 8080</span><br><span class="line">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::8080</span><br><span class="line">Ncat: Listening on 0.0.0.0:8080</span><br><span class="line">Ncat: Connection from 127.0.0.1.</span><br><span class="line">Ncat: Connection from 127.0.0.1:45996.</span><br><span class="line">xxx</span><br><span class="line">xxx</span><br></pre></td></tr></table></figure><h5 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]$ nc -v 127.0.0.1 8080</span><br><span class="line">Ncat: Version 7.50 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Connected to 127.0.0.1:8080.</span><br><span class="line">xxx</span><br><span class="line">xxx</span><br></pre></td></tr></table></figure><h3 id="NAT-作用及使用"><a href="#NAT-作用及使用" class="headerlink" title="NAT 作用及使用"></a>NAT 作用及使用</h3><p>我们现在讲一下nat表主要的作用</p><p>端口转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 将 8080 转发到80 端口上面</span></span><br><span class="line"></span><br><span class="line"> $  iptables -t nat -A PREROUTING -p tcp --dport 8080 -j REDERECT --to-ports 8000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果防火墙默认是关闭的状态</span></span><br><span class="line"></span><br><span class="line">则需要设置以下规则</span><br><span class="line"></span><br><span class="line">$ iptables -A INPUT -p tcp --dport 8000 -j ACCEPT</span><br><span class="line"></span><br><span class="line">$ iptables -A OUTPUT -p tcp --sport 8000 -j ACCEPT</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="流量转发"><a href="#流量转发" class="headerlink" title="流量转发"></a>流量转发</h4><h5 id="将流量转发到服务器上面"><a href="#将流量转发到服务器上面" class="headerlink" title="将流量转发到服务器上面"></a>将流量转发到服务器上面</h5><p>在 10.10.13.111 上 设置 将 对 10.10.13.111的请求转发到10.10.13.110 并实现 逆转,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -I PREROUTING -p tcp --dport 8001 -d 10.10.13.111 -j DNAT --to-destination 10.10.13.110</span><br><span class="line"></span><br><span class="line">iptables -t nat -I POSTROUTING -p tcp --dport 8001 -d 10.10.13.110 -j SNAT --to-destination 10.10.13.111</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;iptables-详解&quot;&gt;&lt;a href=&quot;#iptables-详解&quot; class=&quot;headerlink&quot; title=&quot;iptables 详解&quot;&gt;&lt;/a&gt;iptables 详解&lt;/h1&gt;&lt;p&gt;iptables其实不是真正的防火墙，我们可以把它理解成一个客户端代</summary>
      
    
    
    
    
    <category term="iptables" scheme="http://example.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>kiali 源码解析</title>
    <link href="http://example.com/2021/01/21/k8s/kiali/"/>
    <id>http://example.com/2021/01/21/k8s/kiali/</id>
    <published>2021-01-21T10:36:28.000Z</published>
    <updated>2021-03-09T14:29:31.898Z</updated>
    
    <content type="html"><![CDATA[<p>kiali 源码解析</p><p>前言: </p><p>Kiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强大的验证，Grafana访问以及与Jaeger进行分布式跟踪的强大集成。</p><p>以下就是kiali的流量试图 界面</p><p><img src="https://kiali.io/images/documentation/features/graph-health-v1.22.0.png" alt="kiali"></p><p>Kiali是用于基于Istio的服务网格的管理控制台 所以得使用istio来安装kiali插件</p><p>如何istio 来安装kiali</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ istioctl manifest apply --<span class="built_in">set</span> values.kiali.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>kiali 的默认 用户名与密码是 admin/admin</p><h2 id="kiali-流量试图"><a href="#kiali-流量试图" class="headerlink" title="kiali 流量试图"></a>kiali 流量试图</h2><h3 id="kiali-route-路由"><a href="#kiali-route-路由" class="headerlink" title="kiali route 路由"></a>kiali route 路由</h3><p>routing/router</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根路由 指向 静态页面</span></span><br><span class="line"><span class="keyword">if</span> webRoot != <span class="string">&quot;/&quot;</span> &#123;</span><br><span class="line">rootRouter.HandleFunc(webRoot, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// help the user out - if a request comes in for &quot;/&quot;, redirect to our true webroot</span></span><br><span class="line">rootRouter.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">http.Redirect(w, r, webRootWithSlash, http.StatusFound)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">appRouter = rootRouter.PathPrefix(conf.Server.WebRoot).Subrouter()</span><br><span class="line">&#125;</span><br><span class="line">appRouter = appRouter.StrictSlash(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路由指向代理的function </span></span><br><span class="line">r.Routes = []Route&#123;</span><br><span class="line"><span class="comment">// swagger:route GET /healthz kiali healthz</span></span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line"><span class="comment">// Endpoint to get the health of Kiali</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     Produces:</span></span><br><span class="line"><span class="comment">//     - application/json</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     Schemes: http, https</span></span><br><span class="line"><span class="comment">// responses:</span></span><br><span class="line"><span class="comment">//500: internalError</span></span><br><span class="line"><span class="comment">//200</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Healthz&quot;</span>,</span><br><span class="line"><span class="string">&quot;GET&quot;</span>,</span><br><span class="line"><span class="string">&quot;/healthz&quot;</span>,</span><br><span class="line">handlers.Healthz,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// swagger:route GET / kiali root</span></span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line"><span class="comment">// Endpoint to get the status of Kiali</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     Produces:</span></span><br><span class="line"><span class="comment">//     - application/json</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//     Schemes: http, https</span></span><br><span class="line"><span class="comment">// responses:</span></span><br><span class="line"><span class="comment">//      500: internalError</span></span><br><span class="line"><span class="comment">//      200: statusInfo</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Root&quot;</span>,</span><br><span class="line"><span class="string">&quot;GET&quot;</span>,</span><br><span class="line"><span class="string">&quot;/api&quot;</span>,</span><br><span class="line">handlers.Root,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>kiali里面最复杂的就是流量视图了 现在我们看看kiali是怎么做的</p><p>/graph/api/api</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GraphNamespaces</span><span class="params">(business *business.Layer, o graph.Options)</span> <span class="params">(code <span class="keyword">int</span>, config <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="comment">// time how long it takes to generate this graph</span></span><br><span class="line">promtimer := internalmetrics.GetGraphGenerationTimePrometheusTimer(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes)</span><br><span class="line"><span class="keyword">defer</span> promtimer.ObserveDuration()</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> o.TelemetryVendor &#123;</span><br><span class="line"><span class="keyword">case</span> graph.VendorIstio:</span><br><span class="line">prom, err := prometheus.NewClientNoAuth(business.PromAddress)</span><br><span class="line">graph.CheckError(err)</span><br><span class="line"><span class="comment">//获取config 蓝图信息</span></span><br><span class="line">code, config = graphNamespacesIstio(business, prom, o)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">graph.Error(fmt.Sprintf(<span class="string">&quot;TelemetryVendor [%s] not supported&quot;</span>, o.TelemetryVendor))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// update metrics</span></span><br><span class="line">internalmetrics.SetGraphNodes(o.GetGraphKind(), o.TelemetryOptions.GraphType, o.InjectServiceNodes, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> code, config</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造 TrafficMap</p><p>graph/telemetry/istio/istio.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// BuildNamespacesTrafficMap is required by the graph/TelemtryVendor interface</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BuildNamespacesTrafficMap</span><span class="params">(o graph.TelemetryOptions, client *prometheus.Client, globalInfo *graph.AppenderGlobalInfo)</span> <span class="title">graph</span>.<span class="title">TrafficMap</span></span> &#123;</span><br><span class="line">log.Tracef(<span class="string">&quot;Build [%s] graph for [%v] namespaces [%s]&quot;</span>, o.GraphType, <span class="built_in">len</span>(o.Namespaces), o.Namespaces)</span><br><span class="line"></span><br><span class="line">setLabels()</span><br><span class="line">appenders := appender.ParseAppenders(o)</span><br><span class="line">trafficMap := graph.NewTrafficMap()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, namespace := <span class="keyword">range</span> o.Namespaces &#123;</span><br><span class="line">log.Tracef(<span class="string">&quot;Build traffic map for namespace [%s]&quot;</span>, namespace)</span><br><span class="line"><span class="comment">//生成一个 namespaceTrafficMap</span></span><br><span class="line">namespaceTrafficMap := buildNamespaceTrafficMap(namespace.Name, o, client)</span><br><span class="line">namespaceInfo := graph.NewAppenderNamespaceInfo(namespace.Name)</span><br><span class="line"><span class="keyword">for</span> _, a := <span class="keyword">range</span> appenders &#123;</span><br><span class="line">appenderTimer := internalmetrics.GetGraphAppenderTimePrometheusTimer(a.Name())</span><br><span class="line">a.AppendGraph(namespaceTrafficMap, globalInfo, namespaceInfo)</span><br><span class="line">appenderTimer.ObserveDuration()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class="line">telemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// The appenders can add/remove/alter nodes. After the manipulations are complete</span></span><br><span class="line"><span class="comment">// we can make some final adjustments:</span></span><br><span class="line"><span class="comment">// - mark the outsiders (i.e. nodes not in the requested namespaces)</span></span><br><span class="line"><span class="comment">// - mark the insider traffic generators (i.e. inside the namespace and only outgoing edges)</span></span><br><span class="line">telemetry.MarkOutsideOrInaccessible(trafficMap, o)</span><br><span class="line">telemetry.MarkTrafficGenerators(trafficMap)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> graph.GraphTypeService == o.GraphType &#123;</span><br><span class="line">trafficMap = telemetry.ReduceToServiceGraph(trafficMap)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> trafficMap</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Appender 这个interface 主要负责获取和组装流量视图的节点信息和线的信息</p><p>graph/appender.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Appender is implemented by any code offering to append a service graph with</span></span><br><span class="line"><span class="comment">// supplemental information.  On error the appender should panic and it will be</span></span><br><span class="line"><span class="comment">// handled as an error response.</span></span><br><span class="line"><span class="keyword">type</span> Appender <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// AppendGraph performs the appender work on the provided traffic map. The map</span></span><br><span class="line"><span class="comment">// may be initially empty. An appender is allowed to add or remove map entries.</span></span><br><span class="line">AppendGraph(trafficMap TrafficMap, globalInfo *AppenderGlobalInfo, namespaceInfo *AppenderNamespaceInfo)</span><br><span class="line"><span class="comment">// Name returns a unique appender name and which is the name used to identify the appender (e.g in &#x27;appenders&#x27; query param)</span></span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="appender中有几种实现"><a href="#appender中有几种实现" class="headerlink" title="appender中有几种实现"></a>appender中有几种实现</h4><ul><li>istio: 负责标记具有特殊Istio意义的节点</li><li>deadNode: 负责从图中删除不需要的节点</li><li>serviceEntry: ServiceEntryAppender负责标识在Istio中定义为serviceEntry的服务节点。<br>单个serviceEntry可以定义多个主机，<br>因此多个服务节点可以<br>映射到单个serviceEntry的不同主机。我们将这些称为“ se-service”节点</li><li>responseTime: ResponseTimeAppender负责将responseTime信息添加到图形中</li><li>securityPolicy: SecurityPolicyAppender负责向图表添加securityPolicy信息。<br>尽管以通用方式编写，但该附加程序当前仅报告international_tls安全性。</li><li>sidecarsCheck: SidecarsCheckAppender标记其后备工作负载缺少至少一个Envoy sidecar的节点。请注意，<br>没有后备工作负载的节点未标记。</li><li>unusedNode: 调用函数成功时，函数处理时间指标的持续时间值。<br>如果不成功，则递增失败计数器。<br>如果围棋函数不在一个类型上（即是一个全局函数），请为goType传入一个空字符串。<br>当该函数返回时，定时器立即开始计时。</li></ul><p>appender中的实现必须得有先后顺序, service-entry –&gt; deadNode –&gt; responseTime —&gt; securityPolicy —&gt;  unusedNode –&gt; istio</p><p>经过appender之后将trafficMap merge 到 traffic map中</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">trafficMap := graph.NewTrafficMap()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 namespaceTrafficMap merge ----&gt;  trafficMap 中</span></span><br><span class="line"></span><br><span class="line">telemetry.MergeTrafficMaps(trafficMap, namespace.Name, namespaceTrafficMap)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;kiali 源码解析&lt;/p&gt;
&lt;p&gt;前言: &lt;/p&gt;
&lt;p&gt;Kiali是用于基于Istio的服务网格的管理控制台。它提供仪表板，可观察性，并允许您使用强大的配置和验证功能来操作网格。它通过推断流量拓扑来显示服务网格的结构，并显示网格的运行状况。Kiali提供了详细的指标，强</summary>
      
    
    
    
    <category term="istio" scheme="http://example.com/categories/istio/"/>
    
    
    <category term="kiali" scheme="http://example.com/tags/kiali/"/>
    
    <category term="istio" scheme="http://example.com/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>istio 流量管理使用说明</title>
    <link href="http://example.com/2021/01/21/k8s/istio-use/"/>
    <id>http://example.com/2021/01/21/k8s/istio-use/</id>
    <published>2021-01-20T16:00:00.000Z</published>
    <updated>2021-03-09T14:29:13.300Z</updated>
    
    <content type="html"><![CDATA[<p>istio 流量管理使用说明</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>在开始之前，请检查以下先决条件：</p><ol><li>检查kubernetes 集群pod和 <font face="黑体" color=green size=3>服务</font></li><li>使用1.6 以上版本的istio,并检查 pod和服务</li><li>设定 必要的平台设置</li></ol><h3 id="部署测试服务-bookinfo"><a href="#部署测试服务-bookinfo" class="headerlink" title="部署测试服务 bookinfo"></a>部署测试服务 bookinfo</h3><p>我们就使用istio 官方使用的测试服务<code>BookInfo</code></p><p>Bookinfo应用程序分为四个单独的微服务：</p><p>productpage。该productpage微服务调用details和reviews微服务来填充页面。<br>details。该details微服务包含图书信息。<br>reviews。该reviews微服务包含了书评。它还称为ratings微服务。<br>ratings。该ratings微服务包含预定伴随书评排名信息。<br>reviews微服务有3个版本：</p><p>版本v1不会调用该ratings服务。<br>版本v2调用该ratings服务，并将每个等级显示为1到5个黑星。<br>版本v3调用该ratings服务，并将每个等级显示为1到5个红色星号。</p><p>访问关系如下图</p><p><img src="/uploads/istio/images/m_88841685b364bda18fb333e9acb97366_r.png" alt="bookInfo"></p><p>首先部署bookinfo服务之前我们需要给 bookinfo 注入<br>sidecar,若给namespace打 <code>istio-injection=enabled</code>的labels 则istio会给当前namespace下的所有pod自动注入sidecar</p><p>假设我们将bookinfo 部署到demo的这个namespace中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ kubectl label namespace demo istio-injection=enabled</span><br></pre></td></tr></table></figure><p>查看labels是否设置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get namespace demo --show-labels</span><br></pre></td></tr></table></figure><p>然后你就看到一下的效果 如果最后一个字段上面显示<code>istio-injection=enabled</code>则代表labels 设置成功</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NAME   STATUS   AGE   LABELS</span><br><span class="line">demo   Active   24s   istio-injection=enabled</span><br></pre></td></tr></table></figure><p>部署 BookInfo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl apply -f istio/bookinfo.yml</span><br></pre></td></tr></table></figure><p>查看 服务是否正常部署且 成功注入sidecar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get po -n demo</span><br></pre></td></tr></table></figure><p>确认 所有的service 和pod 都Running </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get service -n demo </span><br><span class="line"></span><br><span class="line">NAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.0.0.31    &lt;none&gt;        9080/TCP   6m</span><br><span class="line">kubernetes    ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP    7d</span><br><span class="line">productpage   ClusterIP   10.0.0.120   &lt;none&gt;        9080/TCP   6m</span><br><span class="line">ratings       ClusterIP   10.0.0.15    &lt;none&gt;        9080/TCP   6m</span><br><span class="line">reviews       ClusterIP   10.0.0.170   &lt;none&gt;        9080/TCP   6m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ kubectl get pods -n demo</span><br><span class="line"></span><br><span class="line">NAME                             READY     STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-1520924117-48z17      2/2       Running   0          6m</span><br><span class="line">productpage-v1-560495357-jk1lz   2/2       Running   0          6m</span><br><span class="line">ratings-v1-734492171-rnr5l       2/2       Running   0          6m</span><br><span class="line">reviews-v1-874083890-f0qf0       2/2       Running   0          6m</span><br><span class="line">reviews-v2-1343845940-b34q5      2/2       Running   0          6m</span><br><span class="line">reviews-v3-1813607990-8ch52      2/2       Running   0          6m</span><br></pre></td></tr></table></figure><p>如果所有pod ready 显示 2/2 则 服务正确注入sidecar</p><h3 id="流量管理"><a href="#流量管理" class="headerlink" title="流量管理"></a>流量管理</h3><h5 id="配置服务访问"><a href="#配置服务访问" class="headerlink" title="配置服务访问"></a>配置服务访问</h5><p>如何将请求动态路由到微服务的多个版本。</p><p>istio Bookinfo示例包含四个单独的微服务，每个微服务具有多个版本。微服务之一的三种不同版本reviews已经部署并同时运行。为了说明此问题，请/productpage在浏览器中访问Bookinfo应用，然后刷新几次。您会注意到，有时书评输出中包含星级，有时则不。这是因为如果没有明确的默认服务版本可路由，Istio将以循环方式将请求路由到所有可用版本。</p><p>配置方式如下所示</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Gateway</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bookinfo-gateway</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">istio:</span> <span class="string">ingressgateway</span> <span class="comment"># istio-system 下面的istio-ingressgateway 的labels</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span> <span class="comment"># 指定访问域名</span></span><br><span class="line">    <span class="attr">port:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">http</span> </span><br><span class="line">      <span class="attr">number:</span> <span class="number">80</span> <span class="comment"># 访问端口</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">HTTP</span> <span class="comment"># 访问协议名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bookinfo</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">gateways:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">bookinfo-gateway</span> <span class="comment"># 网关gateway的名称</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;*&#x27;</span> <span class="comment"># 访问的svc 的名称</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">exact:</span> <span class="string">/productpage</span> <span class="comment"># 精确匹配 路径</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">/static</span> <span class="comment"># 前缀匹配路径</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">exact:</span> <span class="string">/login</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">exact:</span> <span class="string">/logout</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">/api/v1/products</span></span><br><span class="line">    <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">productpage</span> <span class="comment"># 目的服务 svc地址</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">9080</span> <span class="comment"># 目的端口</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上配置的名词解释</p><p>网关配置 gateway 必要字段的解释</p><table><thead><tr><th>字段名称</th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td>selector</td><td>map&lt;string, string&gt;</td><td>一个或多个标签，指示应在其上应用此网关配置的一组特定的Pod / VM。 默认情况下，基于标签选择器在所有名称空间中搜索工作负载。 这意味着名称空间“ foo”中的网关资源可以基于标签选择名称空间“ bar”中的pod。 可以通过istiod中的<code>PILOTSCOPEGATEWAYTONAMESPACE</code>环境变量来控制此行为。 如果将此变量设置为true，则标签搜索的范围将限于存在资源的配置名称空间。 换句话说，网关资源必须与网关工作负载实例位于相同的名称空间中。 如果选择器为零，则网关将应用于所有工作负载。</td><td>yes</td></tr><tr><td>hosts</td><td>[]string</td><td>此网关公开的一台或多台主机。 尽管通常适用于HTTP服务，但也可以将其用于使用TLS和SNI的TCP服务。 主机被指定为带有可选名称空间/前缀的dnsName。 dnsName应该使用FQDN格式指定，可以选择在最左侧的组件中包含通配符（例如prod / <em>.example.com）。 将dnsName设置为</em>，以从指定的名称空间（例如prod / <em>）中选择所有VirtualService主机。可以将名称空间设置为</em>或。，分别代表任意名称空间或当前名称空间。 例如，* / foo.example.com从任何可用的名称空间中选择服务，而./foo.example.com仅从Sidecar的名称空间中选择服务。 如果未指定名称空间/，则默认值为* /，即从任何名称空间中选择服务。 还将使用所选名称空间中的任何关联的DestinationRule。虚拟服务必须绑定到网关，并且必须具有一个或多个与服务器中指定的主机匹配的主机。 匹配可以是与服务器主机的完全匹配或后缀匹配。 例如，如果服务器的主机指定* .example.com，则具有主机dev.example.com或prod.example.com的VirtualService将匹配。 但是，带有主机example.com或newexample.com的VirtualService将不匹配。注意：仅可以引用导出到网关名称空间的虚拟服务（例如，exportTo值为*）。 私有配置（例如，exportTo设置为）将不可用。 有关详细信息，请参考VirtualService，DestinationRule和ServiceEntry配置中的exportTo设置。</td><td>yes</td></tr><tr><td>port</td><td>port</td><td>代理应在其上侦听传入连接的端口和协议</td><td>yes</td></tr></tbody></table><p>获取效果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">➜  ~ kubectl get gw -n demo</span><br><span class="line">NAME               AGE</span><br><span class="line">bookinfo-gateway   11m</span><br><span class="line">➜  ~ kubectl get vs -n demo</span><br><span class="line">NAME                         GATEWAYS             HOSTS                                  AGE</span><br><span class="line">bookinfo                     [bookinfo-gateway]   [*]                                    11m</span><br></pre></td></tr></table></figure><h5 id="VirtualService"><a href="#VirtualService" class="headerlink" title="VirtualService"></a>VirtualService</h5><p>定义了一组寻址主机时要应用的流量路由规则。每个路由规则为特定协议的流量定义匹配条件。如果流量匹配，则将其发送到注册表中定义的命名目标服务（或其子集/版本）。</p><p>以下为VirtualService 字段的名词解释</p><table><thead><tr><th>字段名称</th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td>hosts</td><td>string[]</td><td>hosts字段适用于HTTP和TCP服务。网格内的服务（即在服务注册表中找到的服务）必须始终使用其字母数字名称进行引用。IP地址仅允许通过网关定义的服务使用。</td><td>no</td></tr><tr><td>gateways</td><td>string[]</td><td>应应用这些路由的网关和sidecar的名称。其他名称空间中的网关可以由<gateway namespace>/<gateway name>;引用 。指定没有名称空间限定符的网关与指定VirtualService的名称空间相同</td><td>no</td></tr><tr><td>subset</td><td>string</td><td>服务中子集的名称。仅适用于网格内的服务。该子集必须在相应的DestinationRule中定义。</td><td>node</td></tr><tr><td>port</td><td>PortSelector</td><td>指定要寻址的主机上的端口。如果服务仅公开单个端口，则不需要显式选择端口。</td><td>no</td></tr><tr><td>http</td><td>HTTPRoute[]</td><td>HTTP流量的路由规则的有序列表。HTTP路由将应用于名为“ http- ” /“ http2- ” /“ grpc- *”的平台服务端口，协议为HTTP / HTTP2 / GRPC / TLS终止的HTTPS的网关端口以及使用HTTP / HTTP2 /的服务入口端口GRPC协议。使用匹配传入请求的第一条规则。</td><td>no</td></tr><tr><td>tls</td><td>TLSRoute[]</td><td>未终止的TLS和HTTPS流量的路由规则的有序列表。路由通常使用ClientHello消息显示的SNI值执行。TLS路由将应用于使用HTTPS / TLS协议（即采用“直通” TLS模式）的名为“ https- ”，“ tls- ”的平台服务端口，未终止的网关端口以及使用HTTPS / TLS协议的服务入口端口。使用匹配传入请求的第一条规则。注意：没有关联虚拟服务的流量“ https- ”或“ tls- ”端口将被视为不透明的TCP流量。</td><td>no</td></tr><tr><td>tcp</td><td>TCPRoute[]</td><td>不透明TCP流量的路由规则的有序列表。TCP路由将应用于不是HTTP或TLS端口的任何端口。使用匹配传入请求的第一条规则。</td><td>no</td></tr></tbody></table><h5 id="HTTP路由"><a href="#HTTP路由" class="headerlink" title="HTTP路由"></a>HTTP路由</h5><p>描述用于路由HTTP / 1.1，HTTP2和gRPC通信的匹配条件和操作。有关用法示例，请参见VirtualService。</p><table><thead><tr><th>字段名称</th><th>类型</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td>name</td><td>string</td><td>分配给路由以进行调试的名称。路由名称将与匹配名称串联在一起，并将被记录在访问日志中，以查找与此路由/匹配匹配的请求。</td><td>no</td></tr><tr><td>match</td><td>HTTPMatchRequest[]</td><td>匹配要激活的规则要满足的条件。单个匹配块内的所有条件都具有AND语义，而匹配块列表具有OR语义。如果任何一个匹配块成功，则匹配该规则。</td><td>no</td></tr><tr><td>route</td><td>HTTPRouteDestination[]</td><td>HTTP规则可以重定向或转发（默认）流量。转发目标可以是服务的多个版本之一（请参阅文档开头的词汇表）。与服务版本关联的权重决定了它接收的流量比例。</td><td>no</td></tr><tr><td>redirect</td><td>HTTPRedirect</td><td>HTTP规则可以重定向或转发（默认）流量。如果在规则中指定了流量通过选项，则将忽略路由/重定向。重定向原语可用于将HTTP 301重定向发送到其他URI或Authority。</td><td>no</td></tr><tr><td>rewrite</td><td>HTTPRewrite</td><td>重写HTTP URI和Authority标头。重写不能与重定向原语一起使用。重写将在转发之前执行。</td><td>no</td></tr><tr><td>timeout</td><td>Duration</td><td>HTTP请求超时，默认为禁用。</td><td>no</td></tr><tr><td>retries</td><td>HTTPRetry</td><td>重试HTTP请求的策略。</td><td>no</td></tr><tr><td>headers</td><td>Headers</td><td>标头操作规则</td><td>no</td></tr><tr><td>fault</td><td>HTTPFaultInjection</td><td>故障注入策略，适用于客户端的HTTP通信。请注意，如果在客户端启用了错误，则不会启用超时或重试。</td><td>没有</td></tr><tr><td>mirror</td><td>Destination</td><td>除了将请求转发到预期目标之外，还将HTTP流量镜像到另一个目标。镜像流量是基于尽力而为的，在这种情况下，边车/网关在从原始目的地返回响应之前不会等待镜像集群响应。将为镜像目标生成统计信息。</td><td>no</td></tr></tbody></table><p>http 和tcp 、tls 基本上类似 就不重复说明了</p><p>访问页面即可看到页面效果如下:</p><p><img src="/uploads/istio/images/m_f048c09d102e39ddf43a9d3e0ae81d47_r.png"></p><p>红色框的地方就是不同版本的 <code>reviews</code> 服务</p><h5 id="请求超时"><a href="#请求超时" class="headerlink" title="请求超时"></a>请求超时</h5><p>要测试Bookinfo应用程序微服务的弹性，请为用户reviews:v2和的ratings微服务之间注入7s的延迟jason。此测试将发现故意引入Bookinfo应用程序的错误。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">get</span> <span class="string">virtualservice</span> <span class="string">ratings</span> <span class="string">-o</span> <span class="string">yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">bookinfo-fault-injection</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">demo</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ratings</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">fault:</span></span><br><span class="line">      <span class="attr">delay:</span></span><br><span class="line">        <span class="attr">fixedDelay:</span> <span class="string">7s</span></span><br><span class="line">        <span class="attr">percentage:</span></span><br><span class="line">          <span class="attr">value:</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">match:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">headers:</span></span><br><span class="line">        <span class="attr">end-user:</span></span><br><span class="line">          <span class="attr">exact:</span> <span class="string">jason</span></span><br><span class="line">    <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">ratings</span></span><br><span class="line">        <span class="attr">subset:</span> <span class="string">v1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">ratings</span></span><br><span class="line">        <span class="attr">subset:</span> <span class="string">v1</span></span><br></pre></td></tr></table></figure><p>产生的效果如下所示：</p><p>重新加载<code>productpage</code>网页。您将看到该页面实际上在大约6秒钟内加载完成。</p><p><font face="黑体" color=red size=3>意义:</font>Istio启用协议特定的故障注入到网络中，而不是杀死pod，延迟或在TCP层破坏数据包。我们的理由是，无论网络级别的故障如何，应用层观察到的故障都是一样的，并且可以在应用层注入更有意义的故障（例如，HTTP错误代码），以锻炼应用的弹性。</p><p>运维人员可以为符合特定条件的请求配置故障。运维人员可以进一步限制应该遭受故障的请求的百分比。可以注入两种类型的故障：延迟和中止。延迟是计时故障，模拟增加的网络延迟或过载的上游服务。中止是模拟上游服务的崩溃故障。中止通常以HTTP错误代码或TCP连接失败的形式表现。</p><h5 id="流量分配"><a href="#流量分配" class="headerlink" title="流量分配"></a>流量分配</h5><p>一个常见的用例是将流量逐渐从一种微服务版本迁移到另一种。在Istio中，您可以通过配置一系列规则以将一定百分比的流量路由到一项服务或另一项服务来实现此目标。在此任务中，您将发送流量的10％reviews:v1和90％ reviews:v3。然后，您将100％的流量发送到来完成迁移reviews:v3。</p><p>现在来创建我的配置吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: networking.istio.io/v1beta1</span><br><span class="line">kind: VirtualService</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-traffic-injection</span><br><span class="line">  namespace: demo</span><br><span class="line">spec:</span><br><span class="line">  hosts:</span><br><span class="line">  - reviews</span><br><span class="line">  http:</span><br><span class="line">  - route:</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v1 <span class="comment"># 需要和DestinationRule 资源的名字对应起来</span></span><br><span class="line">      weight: 10</span><br><span class="line">    - destination:</span><br><span class="line">        host: reviews</span><br><span class="line">        subset: v3</span><br><span class="line">      weight: 90</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: networking.istio.io/v1alpha3</span><br><span class="line">kind: DestinationRule</span><br><span class="line">metadata:</span><br><span class="line">  name: bookinfo-traffic-injection</span><br><span class="line">  namespace: demo</span><br><span class="line">spec:</span><br><span class="line">  host: reviews</span><br><span class="line">  subsets:</span><br><span class="line">  - name: v1 <span class="comment"># subset指向的名称</span></span><br><span class="line">    labels:</span><br><span class="line">      version: v1 <span class="comment"># 需要路由到pod labels中的version版本对应的值</span></span><br><span class="line">  - name: v2</span><br><span class="line">    labels:</span><br><span class="line">      version: v2</span><br><span class="line">  - name: v3</span><br><span class="line">    labels:</span><br><span class="line">      version: v3</span><br></pre></td></tr></table></figure><p>创建以上配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">apply</span> <span class="string">-f</span> <span class="string">bookinfo-traffic-injection.yaml</span></span><br></pre></td></tr></table></figure><p>将istio-system下面的kiali的svc地址改成<code>nodeport</code> 访问即可， 默认登陆的用户名密码是 admin/admin</p><p><img src="/uploads/istio/images/m_2d6a4a0feac0159ee65ac3aee53ecaaf_r.png"></p><p>以上是我们还没有配置分配流量时的流量视图，我们可以看到<code>reviews</code>这个服务的三个不同版本的pod都是平均分配的 大约所占比例是33%左右。</p><p>现在我们配置了流量分配再看看是什么样子的。</p><p>我们会发现红色星的次数明显要多余没有星的次数多很多</p><p>我们现在可以借助kiali来看看我们请求的流量视图</p><p><img src="/uploads/istio/images/m_010ffca5e15ec7eb30397a2e97db1268_r.png"></p><p>可以看到<code>reviews</code>不同版本的服务所占比例分别是</p><p><code>v1 ---&gt;14.3% ，v2 ---&gt; 0% ,  v3 ---&gt; 85.7%</code></p><p>现在我们istio的流量分配的设置已经成功了，那么istio的流量分配的意义在哪里，有什么作用呢?</p><p><font face="黑体" color=red size=3>意义:</font>您可以通过 istio 指定特定服务按照你的设定指定转到金丝雀版本，而不必考虑金丝雀部署的大小，或根据请求的内容将流量发送到特定版本。</p><h5 id="给服务注入故障"><a href="#给服务注入故障" class="headerlink" title="给服务注入故障"></a>给服务注入故障</h5><h5 id="熔断"><a href="#熔断" class="headerlink" title="熔断"></a>熔断</h5><h5 id="流量镜像"><a href="#流量镜像" class="headerlink" title="流量镜像"></a>流量镜像</h5><h5 id="问题定位"><a href="#问题定位" class="headerlink" title="问题定位"></a>问题定位</h5><p>在istio中有一个很麻烦的问题 就是配置出错以后很难定位是什么配置错误导致访问出错的问题，所以我们需要专门的工具来定位是什么导致的配置问题。</p><h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><h5 id="证书管理"><a href="#证书管理" class="headerlink" title="证书管理"></a>证书管理</h5><h5 id="认证方式"><a href="#认证方式" class="headerlink" title="认证方式"></a>认证方式</h5><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;istio 流量管理使用说明&lt;/p&gt;
&lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;p&gt;在开始之前，请检查以下先决条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查kubernet</summary>
      
    
    
    
    
    <category term="istio" scheme="http://example.com/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>普通队列</title>
    <link href="http://example.com/2020/09/21/queue/"/>
    <id>http://example.com/2020/09/21/queue/</id>
    <published>2020-09-20T16:00:00.000Z</published>
    <updated>2021-03-09T14:27:18.490Z</updated>
    
    <content type="html"><![CDATA[<p>普通队列</p><p>普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。</p><h1 id="什么是堆"><a href="#什么是堆" class="headerlink" title="什么是堆"></a>什么是堆</h1><p>堆是一颗具有特定性质的二叉树，堆的基本要求就是堆中所有结点的值必须大于或等于（或小于或等于）其孩子结点的值，<br>这也称为堆的性质；堆还有另一个性质，就是当 h &gt; 0 时，所有叶子结点都处于第 h 或 h - 1 层（其中 h 为树的高度，完全二叉树），<br>也就是说，堆应该是一颗完全二叉树；</p><h1 id="什么是二叉树"><a href="#什么是二叉树" class="headerlink" title="什么是二叉树"></a>什么是二叉树</h1><h1 id="优先队列"><a href="#优先队列" class="headerlink" title="优先队列"></a>优先队列</h1><p>优先队列不再遵循先入先出的原则，而是分为两种情况：</p><p>最大优先队列，无论入队顺序，当前最大的元素优先出队。</p><p>最小优先队列，无论入队顺序，当前最小的元素优先出队。</p><p>比如有一个最大优先队列，它的最大元素是8，那么虽然元素8并不是队首元素，但出队的时候仍然让元素8首先出队：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;普通队列&lt;/p&gt;
&lt;p&gt;普通的队列是一种先进先出的数据结构，元素在队列尾追加，而从队列头删除。&lt;/p&gt;
&lt;h1 id=&quot;什么是堆&quot;&gt;&lt;a href=&quot;#什么是堆&quot; class=&quot;headerlink&quot; title=&quot;什么是堆&quot;&gt;&lt;/a&gt;什么是堆&lt;/h1&gt;&lt;p&gt;堆是一颗具有特</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>更改docker默认挂载目录</title>
    <link href="http://example.com/2020/09/21/docker/"/>
    <id>http://example.com/2020/09/21/docker/</id>
    <published>2020-09-20T16:00:00.000Z</published>
    <updated>2021-03-09T14:28:30.673Z</updated>
    
    <content type="html"><![CDATA[<p>更改docker默认挂载目录</p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容，故采用新加一块硬盘，挂载到新目录/docker/，并将docker默认挂载目录改到这个目录的方法解决磁盘将满的问题。</p><h3 id="新加磁盘并挂载"><a href="#新加磁盘并挂载" class="headerlink" title="新加磁盘并挂载"></a>新加磁盘并挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vdb</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">过程略</span><br><span class="line">mkfs.xfs /dev/vdb1</span><br><span class="line">mkdir /docker</span><br><span class="line">mount /dev/vdc1 /docker</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@cloud-jumpserver01 ~]<span class="comment"># blkid </span></span><br><span class="line">/dev/vdc1: UUID=<span class="string">&quot;27d703ee-41b1-4b7e-860b-aa465b807e39&quot;</span> TYPE=<span class="string">&quot;xfs&quot;</span> </span><br><span class="line">cat /etc/fstab </span><br><span class="line">UUID=27d703ee-41b1-4b7e-860b-aa465b807e39 /dev/vdc1               xfs     defaults        1 1</span><br></pre></td></tr></table></figure><h2 id="更改docker挂载目录"><a href="#更改docker挂载目录" class="headerlink" title="更改docker挂载目录"></a>更改docker挂载目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/docker/daemon.json </span><br><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://f1361db2.m.daocloud.io&quot;</span>],</span><br><span class="line"><span class="string">&quot;data-root&quot;</span>: <span class="string">&quot;/docker&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="加载配置"><a href="#加载配置" class="headerlink" title="加载配置"></a>加载配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="验证挂载目录是否更改"><a href="#验证挂载目录是否更改" class="headerlink" title="验证挂载目录是否更改"></a>验证挂载目录是否更改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line">Docker Root Dir: /docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>说明：这时候如果docker ps -a是不会有任何输出的。</p><h2 id="复制文件到新的挂载目录"><a href="#复制文件到新的挂载目录" class="headerlink" title="复制文件到新的挂载目录"></a>复制文件到新的挂载目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -arp /var/lib/docker/* /docker/</span><br></pre></td></tr></table></figure><p>说明：提示是否覆盖文件，选择是。</p><h2 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="验证旧容器是否正常"><a href="#验证旧容器是否正常" class="headerlink" title="验证旧容器是否正常"></a>验证旧容器是否正常</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                            COMMAND             CREATED             STATUS              PORTS                                              NAMES</span><br><span class="line">11ea907c531e        jumpserver/jms_guacamole:1.5.3   <span class="string">&quot;/init&quot;</span>             12 months ago       Up 4 minutes        127.0.0.1:8081-&gt;8080/tcp                           jms_guacamole</span><br><span class="line">c9b5a730f6ec        jumpserver/jms_koko:1.5.3        <span class="string">&quot;./entrypoint.sh&quot;</span>   12 months ago       Up 4 minutes        0.0.0.0:2222-&gt;2222/tcp, 127.0.0.1:5000-&gt;5000/tcp   jms_koko</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;更改docker默认挂载目录&lt;/p&gt;
&lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;生产上运行了一段时间docker后，根分区使用量报警，由于根分区不是lvm类型的，所以无法做扩容</summary>
      
    
    
    
    
    <category term="docker" scheme="http://example.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Compare</title>
    <link href="http://example.com/2020/03/09/compare/"/>
    <id>http://example.com/2020/03/09/compare/</id>
    <published>2020-03-09T10:36:28.000Z</published>
    <updated>2021-03-09T14:27:59.696Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Compare"><a href="#Compare" class="headerlink" title="Compare"></a>Compare</h1><p>比较大小的基本方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> compare</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/clarechu/algorithms/code/models&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">show</span><span class="params">(comparable []*models.Comparable)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(comparable); i++ &#123;</span><br><span class="line">fmt.Println(comparable[i].Value)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//isSorted 查看当前数组是否按照顺序排序</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isSorted</span><span class="params">(comparable []*models.Comparable)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(comparable); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> less(comparable[i], comparable[i<span class="number">-1</span>]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//less v &gt; w</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">less</span><span class="params">(v, w *models.Comparable)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> v.Value &lt; w.Value</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//exchange</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">exchange</span><span class="params">(comparable []*models.Comparable, i, j <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">c := comparable[i]</span><br><span class="line">comparable[i] = comparable[j]</span><br><span class="line">comparable[j] = c</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>选择排序</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">selectSort</span><span class="params">(a []*models.Comparable)</span></span> &#123;</span><br><span class="line">n := <span class="built_in">len</span>(a)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">min := i</span><br><span class="line"><span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; n; j++ &#123;</span><br><span class="line"><span class="keyword">if</span> less(a[j], a[min]) &#123;</span><br><span class="line">min = j</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">exchange(a, min, i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>插入排序</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insertionSort</span><span class="params">(a []*models.Comparable)</span></span> &#123;</span><br><span class="line">n := <span class="built_in">len</span>(a)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := i; j &gt; <span class="number">0</span> &amp;&amp; less(a[j], a[j<span class="number">-1</span>]); j-- &#123;</span><br><span class="line">exchange(a, j, j<span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>归并排序</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//Merge Sort 归并排序</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeSort</span><span class="params">(a []*models.Comparable)</span></span> &#123;</span><br><span class="line">l := <span class="built_in">len</span>(a)</span><br><span class="line">mSort(a, <span class="number">0</span>, l<span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mSort</span><span class="params">(a []*models.Comparable, lo, hi <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> hi &lt;= lo &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">mid := lo + (hi-lo)/<span class="number">2</span></span><br><span class="line">mSort(a, lo, mid)</span><br><span class="line">mSort(a, mid+<span class="number">1</span>, hi)</span><br><span class="line">merge(a, lo, mid, hi)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//merge 合并数组</span></span><br><span class="line"><span class="comment">// lo 初始位置</span></span><br><span class="line"><span class="comment">// min 中位</span></span><br><span class="line"><span class="comment">// hi 高位</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(a []*models.Comparable, lo, mid, hi <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">i, j := lo, mid+<span class="number">1</span></span><br><span class="line">d := <span class="built_in">make</span>([]*models.Comparable, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> _, k := <span class="keyword">range</span> a &#123;</span><br><span class="line">d = <span class="built_in">append</span>(d, k)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> k := lo; k &lt;= hi; k++ &#123;</span><br><span class="line"><span class="comment">// 左边取完了 取右边的</span></span><br><span class="line"><span class="keyword">if</span> i &gt; mid &#123;</span><br><span class="line">a[k] = d[j]</span><br><span class="line">j++</span><br><span class="line"><span class="comment">// 右边取完了 取左边的</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> j &gt; hi &#123;</span><br><span class="line">a[k] = d[i]</span><br><span class="line">i++</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> less(d[j], d[i]) &#123;</span><br><span class="line">a[k] = d[j]</span><br><span class="line">j++</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a[k] = d[i]</span><br><span class="line">i++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>快速排序</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quick</span><span class="params">(a []*models.Comparable, lo, hi <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> lo &gt;= hi &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">k := a[lo]</span><br><span class="line">i, j := lo, hi</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">for</span> ; i &lt; j; j-- &#123;</span><br><span class="line"><span class="keyword">if</span> less(a[j], k) &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> i &lt; j &#123;</span><br><span class="line">a[i] = a[j]</span><br><span class="line">i++</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ; i &lt; j; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> less(k, a[i]) &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> i &lt; j &#123;</span><br><span class="line">a[j] = a[i]</span><br><span class="line">j--</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> i &gt;= j &#123;</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">a[i] = k</span><br><span class="line">quick(a, lo, i<span class="number">-1</span>)</span><br><span class="line">quick(a, i+<span class="number">1</span>, hi)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Compare&quot;&gt;&lt;a href=&quot;#Compare&quot; class=&quot;headerlink&quot; title=&quot;Compare&quot;&gt;&lt;/a&gt;Compare&lt;/h1&gt;&lt;p&gt;比较大小的基本方法&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>本地YUM源搭建</title>
    <link href="http://example.com/2019/03/12/doc-dev/ops/yum/"/>
    <id>http://example.com/2019/03/12/doc-dev/ops/yum/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:26:22.554Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统的包管理是<code>yum</code>。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。</p><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装yum-utils</span></span><br><span class="line">yum install yum-utils createrepo  nginx -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备存储YUM源数据的文件夹</span></span><br><span class="line">mkdir -p /data/yumdata</span><br></pre></td></tr></table></figure><p>同步脚本下载</p><p><a href="./pkg/syncRepo.sh">syncRepo.sh</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p><img src="img/yumlist.png" alt="yum repolist"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行脚本，同步yum源以及生成yum源数据</span></span><br><span class="line"><span class="built_in">cd</span> /data/yumdata</span><br><span class="line">chmod +x syncRepo.sh</span><br><span class="line">sh syncRepos.h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改NGINX配置文件,将同步至本地的YUM通过HTTP给内部使用</span></span><br><span class="line">vi /etc/nginx/nginx.conf</span><br><span class="line">...</span><br><span class="line">location / &#123;</span><br><span class="line">    autoindex on;</span><br><span class="line">    root /data/yumdata/;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启NGINX</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nginx &amp;&amp; systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入定时任务，每天自动同上层yu</span></span><br><span class="line">vim /etc/crontab</span><br><span class="line">2 3 * * * root /data/yumdata/syncRepo.sh</span><br></pre></td></tr></table></figure><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><ol><li><p>先备份系统原有的repo文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d &amp;&amp; mkdir backup</span><br><span class="line">mv *.repo backup</span><br></pre></td></tr></table></figure></li><li><p>在/etc/yum.repos.d/目录下新建本地YUM源的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/local.repo</span><br><span class="line"></span><br><span class="line">[centos-base]</span><br><span class="line">name=CentOS-Base</span><br><span class="line">baseurl=http://128.0.100.170/base/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[centos-update]</span><br><span class="line">name=CentOS-Update</span><br><span class="line">baseurl=http://128.0.100.170/updates/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[centos-extrals]</span><br><span class="line">name=CentOS-Extrals</span><br><span class="line">baseurl=http://128.0.100.170/extras/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[centos-epel]</span><br><span class="line">name=CentOS-EPEL</span><br><span class="line">baseurl=http://128.0.100.170/epel/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[docker-ce]</span><br><span class="line">name=Docker-CE</span><br><span class="line">baseurl=http://128.0.100.170/docker-ce/</span><br><span class="line"><span class="built_in">enable</span>=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Linux系统的包管理是&lt;code&gt;yum&lt;/code&gt;。默认刚安装好的系统一般都是从CentOS官方下载相关软件包，这样就会浪费很多带宽。&lt;/p&gt;
&lt;h2 id=&quot;服务端配置&quot;&gt;&lt;a href=&quot;#服务端配置&quot; class=&quot;headerlink&quot; title=&quot;服务端配</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot整合Swagger2</title>
    <link href="http://example.com/2019/03/12/doc-dev/standard/Swagger2/"/>
    <id>http://example.com/2019/03/12/doc-dev/standard/Swagger2/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:26:29.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>手写Api文档的几个痛点：</p><ol><li>文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。</li><li>接口返回结果不明确</li><li>不能直接在线测试接口，通常需要使用工具，比如postman</li><li>接口文档太多，不好管理</li><li>Swagger也就是为了解决这个问题，当然也不能说Swagger就一定是完美的，当然也有缺点，最明显的就是代码移入性比较强。</li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>在<code>pom.xml</code>中添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在启动类中添加swagger 开关</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootSwagger2Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringbootSwagger2Application.class, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试的demo"><a href="#测试的demo" class="headerlink" title="测试的demo"></a>测试的demo</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(&quot;Hello-world 相关api&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HelloRpcService helloRpcService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> KafkaTemplate kafkaTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;调用rpc服务&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(paramType=&quot;header&quot;,name=&quot;username&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的姓名&quot;,defaultValue=&quot;xxxx&quot;),</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(paramType=&quot;query&quot;,name=&quot;password&quot;,dataType=&quot;String&quot;,required=true,value=&quot;用户的密码&quot;,defaultValue=&quot;xxxxxxxxxxxx&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@ApiResponses(&#123;</span></span><br><span class="line"><span class="meta">            @ApiResponse(code=400,message=&quot;请求参数没填好&quot;),</span></span><br><span class="line"><span class="meta">            @ApiResponse(code=404,message=&quot;请求路径没有或页面跳转路径不对&quot;),</span></span><br><span class="line"><span class="meta">            @ApiResponse(code=500,message=&quot;服务器异常&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/qq&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;controller get method&quot;</span>);</span><br><span class="line">        Hello b = helloRpcService.get(<span class="string">&quot;qq&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到一下效果</p><p><img src="img/world.jpg" alt="world"></p><p><img src="img/hello.jpg" alt="hello"></p><h3 id="Swagger注解"><a href="#Swagger注解" class="headerlink" title="Swagger注解"></a>Swagger注解</h3><p>swagger通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。</p><p>@Api：修饰整个类，描述Controller的作用<br>@ApiOperation：描述一个类的一个方法，或者说一个接口<br>@ApiParam：单个参数描述<br>@ApiModel：用对象来接收参数<br>@ApiProperty：用对象接收参数时，描述对象的一个字段<br>@ApiResponse：HTTP响应其中1个描述<br>@ApiResponses：HTTP响应整体描述<br>@ApiIgnore：使用该注解忽略这个API<br>@ApiError ：发生错误返回的信息<br>@ApiImplicitParam：一个请求参数<br>@ApiImplicitParams：多个请求参数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;手写Api文档的几个痛点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>阿里K8S节点初始化</title>
    <link href="http://example.com/2019/03/12/doc-dev/ops/k8s-node/"/>
    <id>http://example.com/2019/03/12/doc-dev/ops/k8s-node/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:26:08.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改默认DNS"><a href="#修改默认DNS" class="headerlink" title="修改默认DNS"></a>修改默认DNS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/sysconfig/network-scripts</span><br><span class="line"><span class="comment"># 增加默认搜索域为siss.aliyun,并配置DNS为内部的DNS</span></span><br><span class="line"><span class="built_in">echo</span> -e  <span class="string">&quot;DOMAIN=siss.aliyun\nDNS1=172.18.171.109\nDNS2=172.18.171.113&quot;</span> &gt;&gt; ifcfg-eth0</span><br><span class="line"><span class="comment"># 重启网络</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="安装监控组件Zabbix-Agent"><a href="#安装监控组件Zabbix-Agent" class="headerlink" title="安装监控组件Zabbix Agent"></a>安装监控组件Zabbix Agent</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">yum install zabbix-agent -y</span><br></pre></td></tr></table></figure><h3 id="替换默认配置"><a href="#替换默认配置" class="headerlink" title="替换默认配置"></a>替换默认配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 替换默认的日志文件轮替</span></span><br><span class="line">sed -i <span class="string">&#x27;s/LogFileSize=0/LogFileSize=1/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"><span class="comment"># 替换默认的127.0.0.1</span></span><br><span class="line">sed -i <span class="string">&#x27;s/127.0.0.1/zabbix.siss.aliyun/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"><span class="comment"># 替换Hostname</span></span><br><span class="line">sed -i <span class="string">&quot;s/Hostname=Zabbix server/Hostname=<span class="subst">$(hostname)</span>/g&quot;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"><span class="comment"># 替换HostMeta</span></span><br><span class="line">sed -i <span class="string">&#x27;s/# HostMetadata=/HostMetadata=linux/g&#x27;</span> /etc/zabbix/zabbix_agentd.conf</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl restart zabbix-agent&amp;&amp;systemctl <span class="built_in">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure><h2 id="系统日志远端收集"><a href="#系统日志远端收集" class="headerlink" title="系统日志远端收集"></a>系统日志远端收集</h2><p>修改系统的rsyslog，将本地日志发送至远端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/rsyslog.conf</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># 添加至文件最后</span></span><br><span class="line">*.*    @graylog.siss.aliyun:514;RSYSLOG_SyslogProtocol23Format</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改默认DNS&quot;&gt;&lt;a href=&quot;#修改默认DNS&quot; class=&quot;headerlink&quot; title=&quot;修改默认DNS&quot;&gt;&lt;/a&gt;修改默认DNS&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>操作系统标准化</title>
    <link href="http://example.com/2019/03/12/doc-dev/ops/standard/"/>
    <id>http://example.com/2019/03/12/doc-dev/ops/standard/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:26:12.864Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用内部DNS服务器"><a href="#使用内部DNS服务器" class="headerlink" title="使用内部DNS服务器"></a>使用内部DNS服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span>  <span class="string">&quot;nameserver 172.18.171.113&quot;</span> &gt; /etc/resolv.conf</span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&quot;nameserver 172.18.171.109&quot;</span> &gt;&gt; /etc/resolv.conf</span><br><span class="line"><span class="comment"># 另外需要将网卡配置加上本地DNS配置，防止重启丢失DNS</span></span><br></pre></td></tr></table></figure><h2 id="内核参数调整"><a href="#内核参数调整" class="headerlink" title="内核参数调整"></a>内核参数调整</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.d/110-siss.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># IPv4转发开启</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启TCP连接中TIME-WAIT sockets的快速回收</span></span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启TCP连接复用</span></span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启对于TCP时间戳的支持</span></span><br><span class="line">net.ipv4.tcp_timestamps = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 出现SYN等待队列溢出时启用cookie处理，防范少量的SYN攻击。</span></span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地发起连接的端口范围</span></span><br><span class="line">net.ipv4.ip_local_port_range = 1024 65000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听端口的最大队列长度</span></span><br><span class="line">net.core.somaxconn = 16384</span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用参数</span></span><br><span class="line">sysctl -p /etc/sysct.d/110-siss.conf</span><br></pre></td></tr></table></figure><h2 id="数据卷使用LVM，并独立挂载"><a href="#数据卷使用LVM，并独立挂载" class="headerlink" title="数据卷使用LVM，并独立挂载"></a>数据卷使用LVM，并独立挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统所有磁盘</span></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="comment">#假设空白磁盘为/dev/xvdc,建立PV/VG/LV</span></span><br><span class="line">pvcreate /dev/xvdc  &amp;&amp; vgcreate data /dev/xvdc</span><br><span class="line">lvcreate -n data -l 100%VG data &amp;&amp; mkfs.xfs /dev/data/data</span><br><span class="line"></span><br><span class="line">mkidr /data</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/data/data  /data  xfs  defaults 1 1&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><h2 id="基础包安装"><a href="#基础包安装" class="headerlink" title="基础包安装"></a>基础包安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo &gt; docker-ce.repo</span><br><span class="line">rpm -ivh https://mirrors.aliyun.com/zabbix/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">yum install docker-ce vmstatus  zabbix-agent  -y</span><br></pre></td></tr></table></figure><h2 id="Docker默认参数修改"><a href="#Docker默认参数修改" class="headerlink" title="Docker默认参数修改"></a>Docker默认参数修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;log-driver&quot;</span>: <span class="string">&quot;json-file&quot;</span>,</span><br><span class="line">  <span class="string">&quot;log-opt&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;max-file&quot;</span>: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">    <span class="string">&quot;max-size&quot;</span>: <span class="string">&quot;10M&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;data-root&quot;</span>: <span class="string">&quot;/data/docker&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件资源限制修改"><a href="#文件资源限制修改" class="headerlink" title="文件资源限制修改"></a>文件资源限制修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/security/limits.conf</span><br><span class="line">* soft nofile 65536</span><br><span class="line">* hard nofile 65536</span><br><span class="line">* soft nproc  65536</span><br><span class="line">* soft nproc  65536</span><br></pre></td></tr></table></figure><h2 id="系统日志收集与调整"><a href="#系统日志收集与调整" class="headerlink" title="系统日志收集与调整"></a>系统日志收集与调整</h2><ul><li>限制默认<code>journald</code>产生的日志大小，防止撑爆磁盘</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/systemd/journald.conf</span><br><span class="line">SystemMaxUse=50M</span><br><span class="line">RuntimeMaxUse=50M</span><br><span class="line">SystemMaxFiles=10</span><br><span class="line">RuntimeMaxFiles=10</span><br></pre></td></tr></table></figure><ul><li>默认<code>rsyslog</code>日志发送到统一日志收集器(<code>graylog2</code>)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rsyslog.conf</span><br><span class="line"><span class="comment"># graylog.siss.io为GrayLog服务器地址</span></span><br><span class="line">*.*    @graylog.siss.io:514;RSYSLOG_SyslogProtocol23Format</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h2 id="Ansible公钥预存放"><a href="#Ansible公钥预存放" class="headerlink" title="Ansible公钥预存放"></a>Ansible公钥预存放</h2><h2 id="脚本下载"><a href="#脚本下载" class="headerlink" title="脚本下载"></a>脚本下载</h2><p><a href="./pkg/centos7_init.sh">centos7_init.sh</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用内部DNS服务器&quot;&gt;&lt;a href=&quot;#使用内部DNS服务器&quot; class=&quot;headerlink&quot; title=&quot;使用内部DNS服务器&quot;&gt;&lt;/a&gt;使用内部DNS服务器&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>本地开发环境基础服务支持使用DNS设置方法</title>
    <link href="http://example.com/2019/03/12/doc-dev/ops/use_dns/"/>
    <id>http://example.com/2019/03/12/doc-dev/ops/use_dns/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:26:16.893Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改Windows设置"><a href="#修改Windows设置" class="headerlink" title="修改Windows设置"></a>修改Windows设置</h2><p>进入控制面板—-&gt;网络连接—&gt;本地连接</p><p><img src="img/network.jpg" alt="网络连接"></p><p>在弹出的菜单中，点击属性按钮<br><img src="img/proper.jpg" alt="属性"></p><p>弹出的菜单中，先选中Internet协议版本4—再点击属性<br><img src="img/ipv4.jpg" alt="ipv4属性"></p><p>将首选DNS修改为128.0.100.170<br><img src="img/dns.jpg" alt="dns"></p><p>再点击高级按钮,弹出的对话框切换到DNS选项卡，如下图所示<br><img src="img/adv.jpg" alt="高级"></p><p>选中附加这些DNS后续，再点击添加。添加完成后再点击确定，最后依次关闭当前窗口<br><img src="img/add.jpg" alt="添加默认搜索域"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>打开终端命令行窗口，执行<code>ping mysql-dev</code>,应该会自动将<code>mysql-dev</code>转换为<code>mysql-dev.siss.io</code>该域名，并正确返回IP地址<br><img src="img/ping.jpg" alt="ping"></p><p>附:<br><a href="../serviceinfo/dev.md">开发环境信息</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改Windows设置&quot;&gt;&lt;a href=&quot;#修改Windows设置&quot; class=&quot;headerlink&quot; title=&quot;修改Windows设置&quot;&gt;&lt;/a&gt;修改Windows设置&lt;/h2&gt;&lt;p&gt;进入控制面板—-&amp;gt;网络连接—&amp;gt;本地连接&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Sharding-JDBC 的使用</title>
    <link href="http://example.com/2018/03/12/doc-dev/basics/sharding-jdbc/"/>
    <id>http://example.com/2018/03/12/doc-dev/basics/sharding-jdbc/</id>
    <published>2018-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:25:27.994Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://avatars2.githubusercontent.com/u/38046546?s=200&v=4"></p><p>Sharding-JDBC是当当应用框架ddframe中，从关系型数据库模块dd-rdb中分离出来的数据库水平分片框架，实现透明化数据库分库分表访问。Sharding-JDBC是继dubbox和elastic-job之后，ddframe系列开源的第3个项目。<br>Sharding-JDBC直接封装JDBC协议，可以理解为增强版的JDBC驱动，旧代码迁移成本几乎为零。<br>Sharding-JDBC定位为轻量级java框架，使用客户端直连数据库，以jar包形式提供服务，无proxy代理层，无需额外部署，无其他依赖，DBA也无需改变原有的运维方式。</p><p>主要包括以下特点：</p><p>可适用于任何基于java的ORM框架，如：JPA, Hibernate, Mybatis, Spring JDBC Template或直接使用JDBC。<br>可基于任何第三方的数据库连接池，如：DBCP, C3P0, BoneCP, Druid等。</p><p>理论上可支持任意实现JDBC规范的数据库。虽然目前仅支持MySQL，但已有支持Oracle，SQLServer等数据库的计划。<br>分片策略灵活，可支持等号，between，in等多维度分片，也可支持多分片键。</p><p>SQL解析功能完善，支持聚合，分组，排序，limit，or等查询，并支持Binding Table以及笛卡尔积表查询。<br>性能高。单库查询QPS为原生JDBC的99.8%；双库查询QPS比单库增加94%。</p><h2 id="Sharding-JDBC结合SpringBoot"><a href="#Sharding-JDBC结合SpringBoot" class="headerlink" title="Sharding-JDBC结合SpringBoot"></a>Sharding-JDBC结合SpringBoot</h2><p>注意</p><p>1、代码中类似”ds0..1.torder0..1.torder{0..1}”成为行表达式，形如”expression或expression或-&gt;{ expression }”。该表达式可用于配置数据节点和配置分片算法。</p><p>${begin..end}表示范围区间，即表示从begin到end个</p><p>${[unit1, unit2, unit_x]}表示枚举值</p><p>2、orderTableRuleConfig.setActualDataNodes(“ds0..1.torder0..1.torder{0..1}”);</p><p>这里表示的是使用行表达式配置数据节点即数据库分别是ds0、ds1,表分别是t_order0、t_order1。</p><p>该表达的等价组合是：ds0.t_order0, ds0.t_order1, ds1.t_order0, ds1.t_order1。</p><p>3、orderTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(“order_id”, “t_order${order_id % 2}”));</p><p>这里表示的是使用行表达式配置分片算法。该行表示针对t_order表中的元素按照order_id模2将不同的元素放进不同的表中。</p><p>比如order_id=5，5%2=1，则放入t_order1中</p><p>order_id=6, 6%2=0, 则放入t_order0中</p><p>4、除此以外还要一些类似”逻辑表”这样的概念，可以到官方文档自行查询。</p><p>工具类DataRespository(该类来源sharding-sphere-example项目)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://avatars2.githubusercontent.com/u/38046546?s=200&amp;v=4&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>针对 数据的校验</title>
    <link href="http://example.com/2018/03/12/doc-dev/basics/validate/"/>
    <id>http://example.com/2018/03/12/doc-dev/basics/validate/</id>
    <published>2018-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:25:12.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hibernate-Validator-简介"><a href="#Hibernate-Validator-简介" class="headerlink" title="Hibernate Validator 简介"></a>Hibernate Validator 简介</h2><ul><li><p>平时项目中，难免需要对参数 进行一些参数正确性的校验，这些校验出现在业务代码中，让我们的业务代码显得臃肿，而且，频繁的编写这类参数校验代码很无聊。鉴于此，觉得 Hibernate Validator 框架刚好解决了这些问题，可以很优雅的方式实现参数的校验，让业务代码 和 校验逻辑 分开,不再编写重复的校验逻辑。</p></li><li><p>Hibernate Validator 是 Bean Validation 的参考实现 . Hibernate Validator 提供了 JSR 303 规范中所有内置 constraint 的实现，除此之外还有一些附加的 constraint。<br>Bean Validation 为 JavaBean 验证定义了相应的元数据模型和API。缺省的元数据是 Java Annotations，通过使用 XML 可以对原有的元数据信息进行覆盖和扩展。Bean Validation 是一个运行时的数据验证框架，在验证之后验证的错误信息会被马上返回。</p></li></ul><h2 id="Hibernate-Validator-的作用"><a href="#Hibernate-Validator-的作用" class="headerlink" title="Hibernate Validator 的作用"></a>Hibernate Validator 的作用</h2><ol><li>验证逻辑与业务逻辑之间进行了分离，降低了程序耦合度；</li><li>统一且规范的验证方式，无需你再次编写重复的验证代码；</li><li>你将更专注于你的业务，将这些繁琐的事情统统丢在一边。</li></ol><h2 id="spring-boot-结合hibernate来进行数据校验"><a href="#spring-boot-结合hibernate来进行数据校验" class="headerlink" title="spring boot 结合hibernate来进行数据校验"></a>spring boot 结合hibernate来进行数据校验</h2><p>项目中，主要用于接口api 的入参校验和 封装工具类 在代码中校验两种使用方式。</p><p>引入jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.com.siss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validate<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 方法 ValidationUtils.validate(itemInfo);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;demo&quot;, method = RequestMethod.GET)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo</span><span class="params">(<span class="meta">@RequestBody</span> ItemInfo itemInfo)</span> <span class="keyword">throws</span> DataException </span>&#123;</span><br><span class="line">        ValidationUtils.validate(itemInfo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>常用注解有以下几种形式：</p><p>|注解|支持的数据类型|作用|Hibernate元数据影响|<br>|:—:|:—:|:—:|:—:|:—:|<br>|@AssertFalse|Boolean, boolean|检查带注释的元素是否为  false|没有|<br>|@AssertTrue|Boolean, boolean|检查带注释的元素是否为  true|没有|<br>|@DecimalMax|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示.|没有|<br>|@DecimalMin|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示.|没有|<br>|@Digits（integer =，fraction =）|BigDecimal，  BigInteger，  String，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持：任何子类型  Number。|检查带注释的值是否是具有最多  integer 数字和  fraction 小数位的数字。    |对应的数据库表字段会被设置精度(precision)和准度(scale).|<br>|@Future|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查给定的日期是否比现在晚.|没有|<br>|@Max|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否小于或等于约束条件中指定的最大值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@Min|BigDecimal，  BigInteger，  byte，  short，  int，  long 和原始类型的相应的包装。另外由HV支持:(  String 评估由String表示的数值），任何子类型  Number|检查该值是否大于或等于约束条件中规定的最小值.|会给对应的数据库表字段添加一个check的约束条件.|<br>|@NotNull|没有限制|检测该值 不能为空|对应的表字段不允许为null.|<br>|@Null|没有限制|为空||<br>|@Past|java.util.Date，  java.util.Calendar; 另外由HV支持，如果  Joda Time  日期/时间API在类路径上：任何ReadablePartial 和和的  实现  ReadableInstant。|检查标注对象中的值表示的日期比当前早.|没有|<br>|@Pattern(regex=, flag=)|String|检查该字符串是否能够在match指定的情况下被regex定义的正则表达式匹配.|没有|<br>|@Size(min=, max=)|检查该值在min max之间|对应的数据库表字段的长度会被设置成约束中定义的最大值.|没有|<br>|@Valid|任何非基本类型|递归的对关联对象进行校验, 如果关联对象是个集合或者数组, 那么对其中的元素进行递归校验,如果是一个map,则对其中的值部分进行校验.|没有|</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Hibernate-Validator-简介&quot;&gt;&lt;a href=&quot;#Hibernate-Validator-简介&quot; class=&quot;headerlink&quot; title=&quot;Hibernate Validator 简介&quot;&gt;&lt;/a&gt;Hibernate Validator </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot 事务的管理</title>
    <link href="http://example.com/2018/03/12/doc-dev/basics/transactional/"/>
    <id>http://example.com/2018/03/12/doc-dev/basics/transactional/</id>
    <published>2018-03-11T16:00:00.000Z</published>
    <updated>2021-03-09T14:25:28.759Z</updated>
    
    <content type="html"><![CDATA[<p>我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。</p><p>事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</p><p>事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。</p><p>在业务层使用 @Transactional 开启事务，执行数据库操作后抛出异常。具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addMoney</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//先增加余额</span></span><br><span class="line">    accountMapper.addMoney();</span><br><span class="line">    <span class="comment">//然后遇到故障</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;发生异常了..&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据库层就很简单了，我们通过注解来实现账户数据的查询，具体如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.hehe.mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AccountMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from account where account_id=1&quot;)</span></span><br><span class="line">    <span class="function">Account <span class="title">getAccount</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update account set balance = balance+100 where account_id=1&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addMoney</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。&lt;/p&gt;
&lt;p&gt;事务</summary>
      
    
    
    
    
  </entry>
  
</feed>
